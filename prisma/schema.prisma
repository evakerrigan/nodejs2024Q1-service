// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
 id        String   @id @default(uuid())
 login    String   @unique
 password String
 version Int
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
}

model Artist {
 id        String   @id @default(uuid())
 name      String
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 tracks    Track[]
}

model Track {
 id          String   @id @default(uuid())
 name        String
 artistId    String? @map("artist_id")
 albumId     String? @map("album_id")
 duration    Int
 createdAt   DateTime @default(now())
 updatedAt   DateTime @updatedAt

 artist      Artist? @relation(fields: [artistId], references: [id])
 album       Album?   @relation(fields: [albumId], references: [id])
}

model Album {
 id        String   @id @default(uuid())
 name      String
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 tracks    Track[]
}

model Favorites {
 id        String   @id @default(uuid())
 userId    String
 trackId   String
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

//  user      User     @relation(fields: [userId], references: [id])
//  track     Track    @relation(fields: [trackId], references: [id])
}